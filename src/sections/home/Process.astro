---
import processSteps from "../../data/data.json";
import BotonProcess from ".././../components/BotonProcess/BotonProcess";
---

<section class="process-section">
  <div class="process-container">
    <div class="process-header">
      <h2 class="process-title">Our Remodeling Process</h2>
      <p class="process-description">
        We follow a clear, client-focused process to ensure every remodeling
        project is completed on time, on budget, and with high-quality results.
      </p>
    </div>

    <div class="process-content">
      {
        processSteps.map((step, idx) => {
          return (
            <div class="process-item">
              <img class="process-item-image" src={step.img} alt={step.title} />
              <h4 class="process-item-title">{step.title}</h4>
              <p class="process-item-description">{step.description}</p>
            </div>
          );
        })
      }
    </div>

    <div class="process-footer">
      <BotonProcess client:load />
    </div>
  </div>
</section>

<style>
  .process-item {
    opacity: 0;
    transform: translateY(20px);
    transition:
      opacity 0.6s ease-out,
      transform 0.6s ease-out;
  }

  .process-item.animate {
    opacity: 1;
    transform: translateY(0);
  }

  .process-item:nth-child(1).animate {
    transition-delay: 0s;
  }
  .process-item:nth-child(2).animate {
    transition-delay: 0.1s;
  }
  .process-item:nth-child(3).animate {
    transition-delay: 0.2s;
  }
  .process-item:nth-child(4).animate {
    transition-delay: 0.3s;
  }
  .process-item:nth-child(5).animate {
    transition-delay: 0.4s;
  }
  .process-item:nth-child(6).animate {
    transition-delay: 0.5s;
  }

  .process-header h2,
  .process-header p {
    opacity: 0;
    transform: translateY(20px);
    transition:
      opacity 0.6s ease-out,
      transform 0.6s ease-out;
  }

  .process-header h2.animate,
  .process-header p.animate {
    opacity: 1;
    transform: translateY(0);
  }

  .process-header h2.animate {
    transition-delay: 0s;
  }
  .process-header p.animate {
    transition-delay: 0.1s;
  }

  .process-section {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding: 30px;
    overflow: hidden;
  }

  .process-container {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 30px;
    width: 100%;
    max-width: 1450px;
    background-color: #f1f2eb;
    padding: 20px;
    box-sizing: border-box;
  }

  .process-header {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    gap: 5px;
    padding: 30px;
    width: 75%;

    h2 {
      font-family: "Host Grotesk", sans-serif;
      font-size: 4rem;
      font-weight: bold;
      line-height: 1;
    }

    p {
      display: block;
      font-family: "DM Sans", sans-serif;
      font-weight: 400;
      font-size: 12px;
      color: #838383;
      width: 450px;
    }
  }

  .process-content {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    padding: 30px;
    width: 100%;
    flex-wrap: wrap;
    gap: 0;
  }

  .process-item {
    flex: 1;
    display: flex;
    flex-direction: column;
    justify-content: start;
    align-items: center;
    text-align: center;
    gap: 10px;
    padding-top: 25px;
    padding-left: 25px;
    padding-right: 25px;
    height: 300px;

    img {
      width: 80px;
      height: 80px;
      filter: grayscale(100%);
      border-radius: 50%;
      object-fit: cover;
    }

    h4 {
      font-family: "Host Grotesk", sans-serif;
      font-size: 1rem;
      font-weight: bold;
      line-height: 1;
    }

    p {
      display: block;
      font-family: "DM Sans", sans-serif;
      font-weight: 400;
      font-size: 11px;
      color: #838383;
      width: 90%;
    }
  }

  .process-item:nth-child(1) {
    border-right: 1px solid black;
  }

  .process-item:nth-child(2) {
    border-right: 1px solid black;
  }

  .process-item:nth-child(3) {
    border-right: 1px solid black;
  }

  .process-footer {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 40px;
    padding-top: 40px;
    width: 100%;
  }

  .process-footer-image {
    width: 150px;
    height: auto;
    object-fit: contain;
  }

  @media (max-width: 1200px) {
    .process-container {
      padding: 20px;
      gap: 25px;
    }

    .process-header {
      flex-direction: column;
      text-align: center;
      gap: 15px;
      padding: 0 20px;
      width: 90%;
      max-width: 600px;
    }

    .process-header h2 {
      font-size: 3rem;
      width: 100%;
    }

    .process-header p {
      font-size: 13px;
      width: 100%;
    }

    .process-content {
      justify-content: center;
      gap: 20px;
      padding: 20px;
    }

    .process-item {
      flex: 0 0 calc(50% - 10px);
      max-width: 450px;
      height: auto;
      padding: 20px;
    }

    .process-item:nth-child(2n) {
      border-right: none;
    }
    .process-item:nth-child(2n-1) {
      border-right: 1px solid black;
    }
    .process-item:last-child {
      border-right: none;
    }
  }

  @media (max-width: 768px) {
    .process-section {
      padding: 15px;
    }

    .process-container {
      padding: 15px;
      gap: 20px;
    }

    .process-header {
      padding: 0 10px;
      width: 100%;
    }

    .process-header h2 {
      font-size: 2.2rem;
    }

    .process-header p {
      font-size: 11px;
    }

    .process-content {
      flex-direction: column;
      align-items: center;
      gap: 15px;
      padding: 0 10px;
    }

    .process-item {
      flex: 0 0 100%;
      max-width: 400px;
      height: auto;
      padding: 15px;
      border-right: none !important;
      border-bottom: 1px solid black;
    }
    .process-item:last-child {
      border-bottom: none;
    }

    .process-item img {
      width: 70px;
      height: 70px;
    }

    .process-item h4 {
      font-size: 0.95rem;
    }

    .process-item p {
      font-size: 10px;
    }

    .process-footer {
      padding-top: 25px;
      gap: 25px;
    }

    .process-footer-image {
      width: 100px;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const observerOptions = {
      root: null,
      rootMargin: '0px',
      threshold: 0.2 
    };

    const observer = new IntersectionObserver((entries, observer) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('animate');
          observer.unobserve(entry.target);
        }
      });
    }, observerOptions);
    
    document.querySelectorAll('.process-item').forEach(item => {
      observer.observe(item);
    });

    document.querySelectorAll('.process-header h2, .process-header p').forEach(element => {
      observer.observe(element);
    });
  });
</script>
